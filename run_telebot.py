# –¢–µ–ª–µ–ë–æ—Ç
import telebot
from telebot import types
from football_elo.player import PlayersDatabase
from football_elo.match import Match

# –°—é–¥–∞ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç–µ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
bot = telebot.TeleBot('2105483477:AAEd8p7QxIqaUbXci4LEu3WxGJ_u1Lz8dgY')
player_database = PlayersDatabase(path=r"PlayersList.csv") #path=r"C:\Users\Shinobu\PlayersList.csv"
current_players = set()
current_match = Match()
current_teams = None

# –ò–∑ –ø—Ä–∏–º–µ—Ä–∞ —Å –≥–∏—Ç—Ö–∞–±–∞, –¥–ª—è —É–º–µ–Ω–∏—è —Å—á–∏—Ç—ã–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –Ω–∞–±—Ä–∞–Ω–Ω—ã–π —Ä—É—á–∫–∞–º–∏
# https://github.com/eternnoir/pyTelegramBotAPI/blob/master/examples/custom_states.py


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton('‚öΩÔ∏è –ú–∞—Ç—á')
    markup.add(but1)
    bot.send_message(message.chat.id, '–ë—É–¥–µ–º –Ω–∞—á–∏–Ω–∞—Ç—å'.format(message.from_user), reply_markup=markup)


@bot.message_handler(commands=['raiting'])
def raiting(message):
    bot.send_message(message.chat.id, player_database.show_rating())


@bot.message_handler(commands=['edit'])
def edit(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton('üõ†Ô∏è –î–æ–±–∞–≤–∏—Ç—å/–ò–∑–º–µ–Ω–∏—Ç—å')
    markup.add(but1)
    bot.send_message(message.chat.id, '–±—É–¥–µ–º –ø–æ–º–µ–Ω—è—Ç—å'.format(message.from_user), reply_markup=markup)


@bot.message_handler(content_types=['text'])
def main_menu(message):
    global current_match
    global current_teams

    if message.text == '‚öΩÔ∏è –ú–∞—Ç—á':
        current_players.clear()
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        but1 = types.KeyboardButton('1. –í—ã–±–æ—Ä –∏–≥—Ä–æ–∫–æ–≤')
        but2 = types.KeyboardButton('2. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥')
        but3 = types.KeyboardButton('3. –ü–æ–ª—É—á–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã')
        but4 = types.KeyboardButton('4. –ò—Ç–æ–≥ –º–∞—Ç—á–∞')
        markup.add(but1, but2, but3, but4)
        bot.send_message(message.chat.id, '‚öΩÔ∏è –ú–∞—Ç—á', reply_markup=markup)

    elif message.text == '1. –í—ã–±–æ—Ä –∏–≥—Ä–æ–∫–æ–≤':
        list_of_names = player_database.players.name.tolist()
        keyboard = types.InlineKeyboardMarkup(row_width=3)  # row_width - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ !!!!
        backbutton = types.InlineKeyboardButton(text='–ì–æ—Ç–æ–≤–æ', callback_data='1_–ì–æ—Ç–æ–≤–æ')
        button_list = [types.InlineKeyboardButton(text=x, callback_data=f'1_{x}')
                       for x in list_of_names]
        keyboard.add(*button_list, backbutton)
        bot.send_message(message.chat.id, '1. –í—ã–±–æ—Ä –∏–≥—Ä–æ–∫–æ–≤', reply_markup=keyboard)
        # –ë–ª–æ–∫ —Å–¥–µ–ª–∞–ª, –≤—Ä–æ–¥–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –ø—Ä–æ–±–ª–µ–º–∞ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –∏–≥—Ä–æ–∫–æ–≤ –≤ –æ–±–Ω–æ—Ñ–ª–µ–Ω–∏–∏ –≤—ã–∑–≤—ã–≤–∞–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.


    elif message.text == '2. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥':
        l = ['2 –∫–æ–º–∞–Ω–¥—ã', '3 –∫–æ–º–∞–Ω–¥—ã', '4 –∫–æ–º–∞–Ω–¥—ã']
        keyboard = types.InlineKeyboardMarkup(row_width=3)  # row_width - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ !!!!
        button_list = [types.InlineKeyboardButton(text=x, callback_data=x) for x in l]
        keyboard.add(*button_list)
        bot.send_message(message.chat.id, '2. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥', reply_markup=keyboard)
        # –ë–ª–æ–∫ —Å–¥–µ–ª–∞–ª, –≤—Ä–æ–¥–µ —Ä–∞–±–æ—Ç–∞–µ—Ç


    elif message.text == '3. –ü–æ–ª—É—á–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã':
        current_match = Match.load_from_player_list(current_players, player_database)
        current_teams = current_match.balance_teams()

        team_a = [player['name'] for player in current_teams[0]]
        team_b = [player['name'] for player in current_teams[1]]

        bot.send_message(message.chat.id, text=", ".join(team_a))
        bot.send_message(message.chat.id, text=", ".join(team_b))
        # –ë–ª–æ–∫ —Å–¥–µ–ª–∞–ª, —Ö–∑ –ø–æ–∫–∞ –æ—à–∏–±–∫–∞


    elif message.text == '4. –ò—Ç–æ–≥ –º–∞—Ç—á–∞':
        l4 = []
        team_a = [player['name'] for player in current_teams[0]]
        team_b = [player['name'] for player in current_teams[1]]

        # –ö–Ω–æ–ø–∫–∏ –∏—Ç–æ–≥–∞ –º–∞—Ç—á–∞
        t1 = team_a[0]
        t2 = team_b[0]
        l4.append(t1)
        l4.append(t2)
        keyboard = types.InlineKeyboardMarkup(row_width=2)  # row_width - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ !!!!
        backbutton = types.InlineKeyboardButton(text='–ù–∏—á—å—è', callback_data='4_–ù–∏—á—å—è')
        button_list = [types.InlineKeyboardButton(text=x, callback_data=f'4_{x}')
                       for x in l4]
        keyboard.add(*button_list)
        keyboard.add(backbutton)
        bot.send_message(message.chat.id, '4. –ò—Ç–æ–≥ –º–∞—Ç—á–∞', reply_markup=keyboard)
        # –ë–ª–æ–∫ —Å–¥–µ–ª–∞–ª, –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–ª

    elif message.text == 'üõ†Ô∏è –î–æ–±–∞–≤–∏—Ç—å/–ò–∑–º–µ–Ω–∏—Ç—å':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        but1 = types.KeyboardButton('6. –î–æ–±–∞–≤–∏—Ç—å —á–µ–ª–æ–≤–µ—á–∫–∞')
        but2 = types.KeyboardButton('7. –£–¥–∞–ª–∏—Ç—å —á–µ–ª–æ–≤–µ—á–∫–∞')
        markup.add(but1, but2)
        bot.send_message(message.chat.id, 'üõ†Ô∏è –î–æ–±–∞–≤–∏—Ç—å/–ò–∑–º–µ–Ω–∏—Ç—å', reply_markup=markup)


    elif message.text == '6. –î–æ–±–∞–≤–∏—Ç—å —á–µ–ª–æ–≤–µ—á–∫–∞':
        bot.send_message(message.chat.id,
                         '–°—é–¥–∞ –≤–ø–∏—Å–∞—Ç—å –∏–º—è –¥–æ–±—Ä–æ–≤–æ–ª—å—Ü–∞. –ù–∞—á–∏–Ω–∞—Ç—å—Å—è –∏–º—è –¥–æ–ª–∂–Ω–æ —Å "New__" (–ø—Ä–∏–º–µ—Ä New_–ü–µ—Ç—è)')

        # –∑–¥–µ—Å—å –≤—Ä–æ–¥–µ –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∏–º—è


    elif message.text == '7. –£–¥–∞–ª–∏—Ç—å —á–µ–ª–æ–≤–µ—á–∫–∞':
        list_of_names = player_database.players.name.tolist()
        keyboard = types.InlineKeyboardMarkup(row_width=3)  # row_width - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ !!!!
        button_list = [types.InlineKeyboardButton(text=x, callback_data=f'7_{x}') for x in list_of_names]
        keyboard.add(*button_list)
        bot.send_message(message.chat.id, '–ó–¥–µ—Å—å –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è –∏–∑ —Å–ø–∏—Å–∫–∞ —á–µ–ª–æ–≤–µ—á–µ–∫ –∏ –≤—ã–ª–µ—Ç–∞–µ—Ç –∏–∑ –Ω–∞—à–µ–π –±–∞–∑—ã',
                         reply_markup=keyboard)



    elif message.text.startswith('New_'):
        player_database.add_player(name=message.text[4:])
        for x in player_database.players.name.tolist():
            bot.send_message(message.chat.id, x)


@bot.callback_query_handler(func=lambda call: call.data.startswith('1_'))
def handle1(call):  # 1. –í—ã–±–æ—Ä –∏–≥—Ä–æ–∫–æ–≤
    player = call.data[2:]
    #    ls = []
    if player in player_database.names_list():
        current_players.add(player)
        bot.send_message(call.message.chat.id, player)

    if call.data == '1_–ì–æ—Ç–æ–≤–æ':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="1. –í—ã–±–æ—Ä –∏–≥—Ä–æ–∫–æ–≤", reply_markup=None)
        bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                  text="–í—ã–±–æ—Ä –∏–≥—Ä–æ–∫–æ–≤ –∑–∞–∫–æ–Ω—á–µ–Ω")


@bot.callback_query_handler(func=lambda call: call.data.startswith('4_'))
def handle4(call):  # 4. –ò—Ç–æ–≥ –º–∞—Ç—á–∞
    win = None
    global current_teams
    global current_match
    global current_players
    team_a = set([player['name'] for player in current_teams[0]])
    team_b = set([player['name'] for player in current_teams[1]])
    player_name = call.data[2:]
    if player_name in team_a:
        win = 1
        bot.send_message(call.message.chat.id, '–ü–æ–±–µ–¥–∏–ª–∞ –∫–æ–º–∞–Ω–¥–∞ 1')
        current_match.set_result("win")
    elif player_name in team_b:
        win = 2
        bot.send_message(call.message.chat.id, '–ü–æ–±–µ–¥–∏–ª–∞ –∫–æ–º–∞–Ω–¥–∞ 2')
        current_match.set_result("lose")
    elif call.data == '4_–ù–∏—á—å—è':
        win = 0
        bot.send_message(call.message.chat.id, '–ù–∏—á—å—è')
        current_match.set_result("draw")
    current_match.update_database(player_database)
    current_teams = None
    current_match = Match()
    current_players.clear()


@bot.callback_query_handler(func=lambda call: call.data.startswith('7_'))
def handle4(call):  # 7. –£–¥–∞–ª–∏—Ç—å —á–µ–ª–æ–≤–µ—á–∫–∞
    player_name = call.data[2:]
    player_database.players = player_database.remove_player(remove_name=player_name)
    bot.send_message(call.message.chat.id, '–ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–¥–∞–ª–∏–ª—Å—è –ª–∏ —á–µ–ª–æ–≤–µ—á–µ–∫')
    for x in player_database.players.name.tolist():
        bot.send_message(call.message.chat.id, x)


@bot.callback_query_handler(func=lambda call: True)
def handle(call):
    if call.data == '2 –∫–æ–º–∞–Ω–¥—ã':
        bot.send_message(call.message.chat.id, '2 –∫–æ–º–∞–Ω–¥—ã, –∫–ª–∞—Å—Å–∏–∫–∞')
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="2. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥", reply_markup=None)
    elif call.data == '3 –∫–æ–º–∞–Ω–¥—ã':
        bot.send_message(call.message.chat.id, '3 –∫–æ–º–∞–Ω–¥—ã, –ø–æ 7 –º–∏–Ω—É—Ç, –¥–µ–ª–∏–º—Å—è —Å–∞–º–∏ –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç')
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="2. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥", reply_markup=None)
    elif call.data == '4 –∫–æ–º–∞–Ω–¥—ã':
        bot.send_message(call.message.chat.id, '4 –∫–æ–º–∞–Ω–¥—ã, –∞–≥–∞, –ø–æ—á—Ç–∏ –ø–æ–≤–µ—Ä–∏–ª.')
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="2. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥", reply_markup=None)


bot.polling(non_stop=True)
